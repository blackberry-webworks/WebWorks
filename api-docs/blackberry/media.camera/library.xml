<?xml version="1.0" encoding="utf-8"?>
<library isWhitelist="true">
  <extension id="blackberry.media.camera">
    <entryClass>blackberry.media.camera.CameraExtension</entryClass>
  </extension>
  
  <platforms>
    <platform value="JAVA">
      <target version="default" config="JAVA_XHR" />
      <target version="5.0" config="JAVA_XHR_BlackBerry" />
    </platform>
  </platforms>
  
  <configurations>
    <configuration name="JAVA_XHR" version="1.0" comment="For XHR architecture for Java implementation">
      <src type="text/java" path="blackberry" comment="API implementation in JavaScript" />
    </configuration>
    <configuration name="JAVA_XHR_BlackBerry" version="1.0" comment="For XHR architecture for Java implementation for OS 5.0">
      <src type="text/java" path="blackberry" comment="API implementation in JavaScript" />
    </configuration>
  </configurations>  

  <features>
    <feature id="blackberry.media.camera" version="1.0.0"/>
  </features>

  <object name="blackberry.media.camera" shortName="Camera" introduced="1.0.0" comment="The camera feature allows you to invoke the native camera application to record video or take a picture.">
    <features>
      <feature id="blackberry.media.camera" version="1.0.0"/>
    </features>
    
    <example><![CDATA[<script type="text/javascript">
  blackberry.media.camera.takePicture(onPictureAdded);
  
  function onPictureAdded(picturePath) {
    var pictureTaken = new Image();
    pictureTaken.src = picturePath;
    document.write(pictureTaken);                  
  }
</script>]]></example>
    
    <functions>
      <func name="takePicture" static="true" returns="void" comment="Invoke the camera application">
        <param name="onComplete" type="onComplete" comment="callback that will recieve the path when a picture is created"/>
        <param name="onCancel" optional="true"  type="onCancel" comment="callback that is called when the user cancels the photo"/>
        <param name="onError" optional="true"  type="onError" comment="callback that is called if an error occurs"/>
        <details>
          Invoke the native camera application and register the callback method to be invoke with path to the picture when becomes available.
        </details>
      </func>
      <func name="takeVideo" static="true" returns="void" comment="Invoke the camera application">
        <param name="onComplete" type="onComplete" comment="callback that will recieve the path when a video is created"/>
        <param name="onCancel" optional="true"  type="onCancel" comment="callback that is called when the user cancels the video"/>
        <param name="onError" optional="true" type="onError" comment="callback that is called if an error occurs"/>
        <details>
          Invoke the native camera application and register the callback method to be invoke with path to the video when becomes available.
        </details>
      </func>
      <func name="close" static="true" returns="void" comment="Closes the camera  or video recorder application if it is in the foreground">
        <details>
          Closes the camera  or video recorder application if it is in the foreground.
        </details>
      </func>
    </functions>
    
    <subclasses>
      <object name="onComplete" shortName="onComplete Interface" interface="true" comment="Interface to provide path to a picture or video taken by camera.">
        <param name="path" type="String" comment="The path to the last captured media item (picture, sound, video)"/>
        <details>
          This interface must be available for you to receive a path to a picture or video taken by the camera.
        </details>
      </object>
      <object name="onCancel" shortName="onCancel Interface" interface="true" comment="called when the user cancels the operation">
        <details>
          This interface is used when the user cancels the operation
        </details>
      </object>
      <object name="onError" shortName="onError Interface" interface="true" comment="called when an error occurs">
        <details>
          This interface is used when an error occurs
        </details>
      </object>
      
    </subclasses>
    
  </object>
</library>
